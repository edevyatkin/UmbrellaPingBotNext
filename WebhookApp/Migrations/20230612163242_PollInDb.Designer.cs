// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebhookApp.Data;

#nullable disable

namespace WebhookApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230612163242_PollInDb")]
    partial class PollInDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("WebhookApp.Services.Battle.BattleNotificationPing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BattleNotificationPings");
                });

            modelBuilder.Entity("WebhookApp.Services.Lottery.LotteryPing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LotteryPings");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BattlePollId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TgChatId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TgMessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BattlePollId")
                        .IsUnique();

                    b.ToTable("BattlePin");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePoll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("TgChatId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TgMessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BattlePolls");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePollOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BattlePollId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderInOptions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderInVotes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BattlePollId");

                    b.ToTable("BattlePollOption");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePollVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BattlePollId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BattlePollId");

                    b.ToTable("BattlePollVote");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePin", b =>
                {
                    b.HasOne("WebhookApp.Services.Polls.Entities.BattlePoll", "Poll")
                        .WithOne("Pin")
                        .HasForeignKey("WebhookApp.Services.Polls.Entities.BattlePin", "BattlePollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePollOption", b =>
                {
                    b.HasOne("WebhookApp.Services.Polls.Entities.BattlePoll", "Poll")
                        .WithMany("Options")
                        .HasForeignKey("BattlePollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePollVote", b =>
                {
                    b.HasOne("WebhookApp.Services.Polls.Entities.BattlePoll", "Poll")
                        .WithMany("Votes")
                        .HasForeignKey("BattlePollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("WebhookApp.Services.Polls.Entities.BattlePoll", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Pin");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
